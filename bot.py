import logging
import asyncio

from aiogram import Bot, Dispatcher, Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties

TOKEN = "8037349465:AAEf-bVkQsBl18vZmJI3gRh_iWe-ztqAYL4"
ADMIN_ID = 1324688385  # ID –ù–∞—Ç–∞–ª–∏

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())
router = Router()
dp.include_router(router)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–∫–∏–¥–∫–∏ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
class DiscountForm(StatesGroup):
    name = State()
    phone = State()

class HealthForm(StatesGroup):
    name = State()
    phone = State()

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(F.text == "/start")
async def cmd_start(message: Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üíÑ –ö—Ä–∞—Å–æ—Ç–∞ –∏ —É—Ö–æ–¥"), KeyboardButton(text="üíä –ó–¥–æ—Ä–æ–≤—å–µ")],
            [KeyboardButton(text="üéÅ –ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É")]
        ],
        resize_keyboard=True
    )
    await message.answer(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Å–∫–∏–¥–æ–∫.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=keyboard
    )

# –ö–æ–º–∞–Ω–¥–∞ /help
@router.message(F.text == "/help")
async def cmd_help(message: Message):
    await message.answer("""–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:
/start ‚Äì –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ
/help ‚Äì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º
/discount ‚Äì –ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É
/products ‚Äì –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥
/contact ‚Äì –°–≤—è–∑–∞—Ç—å—Å—è —Å –ù–∞—Ç–∞–ª—å–µ–π""")

# –ö–æ–º–∞–Ω–¥–∞ /products
@router.message(F.text == "/products")
async def cmd_products(message: Message):
    await message.answer("üì¶ –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏: https://meitanglobal.com/catalog/?ref=782833")

# –ö–æ–º–∞–Ω–¥–∞ /contact
@router.message(F.text == "/contact")
async def cmd_contact(message: Message):
    await message.answer("üì≤ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ù–∞—Ç–∞–ª—å–µ–π: https://t.me/nataliaosipova8164")

# –ö–Ω–æ–ø–∫–∞ ¬´üéÅ –ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É¬ª
@router.message(F.text.in_({"üéÅ –ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É", "/discount"}))
async def discount_start(message: Message, state: FSMContext):
    await state.set_state(DiscountForm.name)
    await message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?", reply_markup=ReplyKeyboardRemove())

@router.message(DiscountForm.name)
async def discount_get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(DiscountForm.phone)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

@router.message(DiscountForm.phone)
async def discount_get_phone(message: Message, state: FSMContext):
    data = await state.get_data()
    name = data["name"]
    phone = message.text
    try:
        await bot.send_message(ADMIN_ID, f"üéÅ –ó–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–∏–¥–∫—É:\n–ò–º—è: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ù–∞—Ç–∞–ª—å—è —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è üòä")
    await state.clear()

# –ö–Ω–æ–ø–∫–∞ ¬´–ö—Ä–∞—Å–æ—Ç–∞ –∏ —É—Ö–æ–¥¬ª
@router.message(F.text == "üíÑ –ö—Ä–∞—Å–æ—Ç–∞ –∏ —É—Ö–æ–¥")
async def beauty_section(message: Message, state: FSMContext):
    await message.answer(
        "üå∏ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:\n"
        "‚Äî –ì–µ–ª—å Dao de Mei\n"
        "‚Äî –ö—Ä–µ–º NeoCollagen\n"
        "‚Äî –ü–∞—Ç—á–∏ —Å –ø–µ–ø—Ç–∏–¥–∞–º–∏\n\n"
        "–ï—Å–ª–∏ –≤–∞—Å —á—Ç–æ-—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–æ ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ, –∏ –ù–∞—Ç–∞–ª—å—è –ø–æ–¥–±–µ—Ä—ë—Ç –ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ."
    )
    await state.set_state(HealthForm.name)

# –ö–Ω–æ–ø–∫–∞ ¬´–ó–¥–æ—Ä–æ–≤—å–µ¬ª
@router.message(F.text == "üíä –ó–¥–æ—Ä–æ–≤—å–µ")
async def health_section(message: Message, state: FSMContext):
    await message.answer(
        "üåø –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞:\n"
        "‚úîÔ∏è –°—É—Å—Ç–∞–≤—ã\n‚úîÔ∏è –ò–º–º—É–Ω–∏—Ç–µ—Ç\n‚úîÔ∏è –ñ–ö–¢\n‚úîÔ∏è –ñ–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç ‚Äî –ù–∞—Ç–∞–ª—å—è –ø–æ–º–æ–∂–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–æ."
    )
    await state.set_state(HealthForm.name)

@router.message(HealthForm.name)
async def get_health_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(HealthForm.phone)
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

@router.message(HealthForm.phone)
async def get_health_phone(message: Message, state: FSMContext):
    data = await state.get_data()
    name = data["name"]
    phone = message.text
    try:
        await bot.send_message(ADMIN_ID, f"üí¨ –ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏:\n–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ù–∞—Ç–∞–ª—å—è —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ üòä")
    await state.clear()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())